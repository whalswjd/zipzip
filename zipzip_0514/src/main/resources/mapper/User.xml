<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
 <mapper namespace="User">
 
     <!-- 회원가입 -->
    <insert id="insert" parameterType="com.example.demo.dto.User">
       	INSERT INTO ZIP_USER (
          	USER_ID,
          	USER_PWD,
          	USER_NAME,
          	USER_PHONE,
          	USER_EMAIL,
         	STATUS,
          	REG_DATE,
          	EMAIL_AUTH,
          	ROLE
      	) VALUES (
          	#{userId},
          	#{userPwd},
          	#{userName},
          	#{userPhone},
          	#{userEmail},
          	#{status},
          	SYSDATE,
          	#{emailAuth},
          	#{role}
      )
    </insert>
 
     <!-- 로그인 -->
	<select id="findById" parameterType="String" resultType="com.example.demo.dto.User">
		SELECT USER_ID,
        	USER_PWD,
          	USER_NAME,
          	USER_PHONE,
          	USER_EMAIL,
          	STATUS,
          	REG_DATE,
          	EMAIL_AUTH,
          	ROLE
      	FROM ZIP_USER
      	WHERE USER_ID = #{userId}
	</select>
 
     <!-- 아이디 중복 검사 -->
    <select id="idCheck" parameterType="String" resultType="int">
    	SELECT COUNT(*)
      	FROM ZIP_USER
      	WHERE USER_ID = #{userId}
    </select>
 
	<!--회원 정보조회 -->
	<select id="userSelect" parameterType="String" resultType="com.example.demo.dto.User">
		SELECT USER_ID,
       		NVL(USER_PWD,'') AS USER_PWD,
       		NVL(USER_NAME,'') AS USER_NAME,
       		NVL(USER_PHONE,'') AS USER_PHONE,
       		NVL(USER_EMAIL,'') AS USER_EMAIL,
       		NVL(STATUS,'Y') AS STATUS,
       		NVL(TO_CHAR(REG_DATE,'YYYY.MM.DD'),'') AS REG_DATE,
       		NVL(EMAIL_AUTH,'') AS EMAIL_AUTH,
       		NVL(ROLE,'') AS ROLE
		FROM ZIP_USER
		WHERE USER_ID = #{userId}
	</select>
	
	<!--회원 정보수정 -->
	<update id="userUpdate" parameterType="com.example.demo.dto.User">
		UPDATE  ZIP_USER
		SET USER_NAME = #{userName},
    		USER_PWD = #{userPwd},
    		USER_PHONE = #{userPhone},
    		USER_EMAIL = #{userEmail}
		WHERE USER_ID = #{userId}  
	</update>
	
   <!-- 찜목록 리스트 조회 -->
   <select id="interestItemSelect" parameterType="String" resultType="com.example.demo.dto.InterestItem">
      SELECT A.ITEM_NUM,   
      		NVL(D.AGENT_NAME || '(' || D.AGENT_OFFICE_NAME || ')','') AS AGENT_INFO,
            NVL(A.ITEM_NAME || '(' || B.ITEM_KIND  || ')','')  AS ITEM_INFO,
            NVL(TO_CHAR(C.REG_DATE,'YYYY.MM.DD'),'') AS REG_DATE
      FROM ZIP_ITEM A, ZIP_ITEM_DETAIL B,ZIP_INTEREST_ITEM C,ZIP_AGENT D
      WHERE USER_ID = #{userId}
      AND A.ITEM_NUM = B.ITEM_NUM
      AND A.ITEM_NUM = C.ITEM_NUM
      AND A.AGENT_ID = D.AGENT_ID
      AND A.ITEM_STATUS = 'Y' 
      ORDER BY REG_DATE DESC
   </select>
   
   <!-- 찜목록내 존재 여부 조회 -->
   <select id="interestItemFindSelect" parameterType="com.example.demo.dto.InterestItem" resultType="int">
	   SELECT COUNT(USER_ID) AS CNT
	   FROM ZIP_INTEREST_ITEM
	   WHERE  USER_ID = #{userId}
		AND ITEM_NUM = #{itemNum}
   </select>
   
   <!-- 찜목록 추가 -->
   <insert id="interestItemInsert" parameterType="com.example.demo.dto.InterestItem">
      INSERT INTO ZIP_INTEREST_ITEM
      (
        	USER_ID,
        	ITEM_NUM,
          	REG_DATE
      )
      VALUES
      (
          	#{userId},
           	#{itemNum},
           	SYSDATE
      )
   </insert>
   
   <!-- 찜목록 삭제  -->
   <delete id="interestItemDelete" parameterType="com.example.demo.dto.InterestItem">
      DELETE 
      FROM ZIP_INTEREST_ITEM
      WHERE ITEM_NUM = #{itemNum}
      AND USER_ID = #{userId}
   </delete> 

 </mapper>